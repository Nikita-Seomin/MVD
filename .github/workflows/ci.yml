name: Publish Docker image

on:
  push:
    branches:
      - addDocker

jobs:

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/devops

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


  telegram:
    name: Send notification to Telegram
    needs: push_to_registry
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/telegram-action@master
        with:
          token: 5416401310:AAGDu1eZ93ABOBGMUxbVZFcqsevmdllKXR4
          to: +J6FJ3igm8p5mOGEy
          message: |
            New release ${{ github.ref }} in ${{ github.repository }}
            Author: ${{ github.actor }}
            
            Docker status: ${{ needs.push_to_registry.result }}










#  build:
#    name: Build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: docker ps
#        run: docker-compose ps
#
#      - name: docker down
#        run: docker-compose down

#      - name: docker up
#        run: docker-compose down

#      - name: docker buld
#        run:  docker build -t "mvd_nodejs"
#
#      - name: docker save
#        run: docker save $(docker images -q) -o /myimage.tar

#      - name: docker run
#        run: docker-compose -d
#
#      - name: docker logs
#        run: sleep 10 && docker-compose logs
#
#      - name: Upload Artifacts
#        uses: actions/upload-artifact@v3
#        with:
#          name: my-artifact
#          path: /myimage.tar
#          retention-days: 5